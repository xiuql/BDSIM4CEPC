! ==============================================================================;
! area=eff1 (ilcff9);
! ------------------------------------------------------------------------------
! 10-FEB-2006, M. Woodley
!    ILC2006a configuration ... increase crab cavity length; add mask at
!    upstream end of crab cavity
! 16-mar-2005, m. woodley;
!    ilc2005 configuration: from andrei seryi's ilcff8.mad; reduce bs1 bends;
!    for zero net bending; rematch sextupoleupoles; add energy spectrometer chicane;;
!    retune for bandwidth;
! 07-sep-2004, m. woodley;
!    nlc2004 configuration;
! 30-jul-2003, pt:;
!    move qf5 through qd2a quadrupole strengths to the configuration files.;
! 24-jul-2003, pt:;
!    new preamble.  move bend angles, sextupole strengths, octupole strengths,
!    decapole strengths, and some definitions around the ir to the ;
!    configuration ("patch") files.;
! 23-jul-2003, pt:;
!    add bpmvirt to octupoles, decapoles, any sextupoleupoles w/o a bpm.;
! 20-may-2003, m. woodley;
!    add photon dump (fixed 1 cm radius circular aperture) per l. keller;
! 04-apr-2003, m. woodley;
!    nlc2003 configuration:;
!;
!    - full length raimondi/seryi compact final focus system;
!    - "short" superconducting final doublet optimized for 250 gev beam;
!    - bend strengths optimized for 250 gev beam;
!    - "large" detector with 5 t field;;
!;
!    give spoilers and absorbers non-zero physical lengths and set gaps per;
!    l. keller note of 20-dec-2002; move crab cavity upstream of st4; increase;
!    bore of matching quadrupolerupoles qm11-16 from 2 cm to 4 cm; add pps stoppers;;
!    add muon spoilers;
! 24-jul-2002, m. woodley;
!    per g. blair;
! 01-apr-2002, m. woodley;
!    from nlc130.effh.xsif; split oc0 in half; per a. seryi: change aperture;
!    radius of qd2b/qf3/qd2a from 1 cm to 3 cm; increase strength of oc7;
!    octupoles (a-e) by a factor of 1.3; change aperture of b5/qd8/qf7/qd6/qf5/;
!    sf5/qd4/sf4 from 1 cm to 1.25 cm;
! 03-dec-2001, a. seryi;
!    switch to "short" final doublet ... create nlc130.effh.xsif for trc;
!    studies ;
! 14-nov-2001, a. seryi;
!    bend strengths optimized for 250 gev beam;
! 20-sep-2001, p. tenenbaum;
!    change oc7 aperture to 7 mm, final doublet quadrupoles/sextupoles to 1 cm;;
!    eliminated unsplit beamline and elements; added spe energy spoiler to;
!    shadow energy absorber; added assorted instrumentation and controls,
!    stoppers, sbd pulsed bends, etc.;
! 28-aug-2001, m. woodley;
!    bnlc500_ff112 from p. raimondi;
! ------------------------------------------------------------------------------;

! ==============================================================================;
! dipoles;
! ------------------------------------------------------------------------------;

! energy collimation / soft bend;

  lb12 := 12.0;

  gb1    := 0.01;
  gb1p25 := 0.0125;
  gb3    := 0.03;

  tbs1 := bsign*(-0.8394601319e-4);
  tb5  := bsign*( 0.1213152148e-3);
  tb2  := bsign*( 0.991473613e-4 );
  tb1  := bsign*( 0.357678789e-4 );

  bs1 : ilcsbend, l=lb12/2, angle=tbs1/2, hgap=gb1,    fint=0, fintx=0, type="h20";
  b5  : ilcsbend, l=lb12/2, angle=tb5/2,  hgap=gb1p25, fint=0, fintx=0, type="h25";
  b2  : ilcsbend, l=lb12/2, angle=tb2/2,  hgap=gb3,    fint=0, fintx=0, type="h60";
  b1  : ilcsbend, l=lb12/2, angle=tb1/2,  hgap=gb3,    fint=0, fintx=0, type="h60";

! energy spectrometer;

  eceta := 5.0               ;!peak dispersion (mm);
  ecrmm := 0.485436893589e-4 ;!d(angle)/d(eta) (rad/mm);
  ecang := eceta*ecrmm       ;!chicane bend angle (rad);

  zbec1  := 3.0                   ;!pole "z" length (m);
  rbec1  := zbec1/sin(ecang)      ;!bend radius (m);
  lbec1  := rbec1*ecang           ;!effective length (m);
  abec1a := asin(0.5*zbec1/rbec1) ;!bend angle ("short" half);
  lbec1a := rbec1*abec1a          ;!effective length ("short" half);
  abec1b := ecang-abec1a          ;!bend angle ("long" half);
  lbec1b := lbec1-lbec1a          ;!effective length ("long" half);

  bec1a : ilcsbend, l=lbec1a, angle=abec1a, hgap=gb1, type="h20",
                   fint=0.5, fintx=0;
  bec1b : ilcsbend, l=lbec1b, angle=abec1b, hgap=gb1, type="h20",
                fint=0,   fintx=0.5;
  bec4a : ilcsbend, l=lbec1b, angle=abec1b, hgap=gb1, type="h20",
                fint=0.5, fintx=0;
  bec4b : ilcsbend, l=lbec1a, angle=abec1a, hgap=gb1, type="h20",
                      fint=0,   fintx=0.5;

  zbec2  := 6.0                   ;!pole "z" length (m);
  rbec2  := zbec2/sin(ecang)      ;!bend radius (m);
  lbec2  := rbec2*ecang           ;!effective length (m);
  abec2a := asin(0.5*zbec2/rbec2) ;!bend angle ("short" half);
  lbec2a := rbec2*abec2a          ;!effective length ("short" half);
  abec2b := ecang-abec2a          ;!bend angle ("long" half);
  lbec2b := lbec2-lbec2a          ;!effective length ("long" half);

  bec2a : ilcsbend, l=lbec2b, angle=-abec2b, hgap=gb1, type="h20",
                 fint=0.5, fintx=0;
  bec2b : ilcsbend, l=lbec2a, angle=-abec2a, hgap=gb1, type="h20",
                      fint=0,   fintx=0.5;
  bec3a : ilcsbend, l=lbec2a, angle=-abec2a, hgap=gb1, type="h20",
                      fint=0.5, fintx=0;
  bec3b : ilcsbend, l=lbec2b, angle=-abec2b, hgap=gb1, type="h20",
                 fint=0,   fintx=0.5;

! bend-to-bend path lengths;

  zecbbo := 16.1              ;!outer bend-to-bend "z" spacing (m);
  lecbbo := zecbbo/cos(ecang) ;!outer bend-to-bend path length (m);
  lecbbi := 1.4               ;!inner bend-to-bend "z" spacing (m);

  decbbo : drift, l=lecbbo;
  decbbi : drift, l=lecbbi/2;

! single beam dumper: uses a pair of pbh-type pulsed bends, 9 kg each, 3 m long;
! each, to give a kick angle of 3.24 mrad; this one sends the beam to a 120 hz,
! 1 bunch/train dump (basically the slc main dumps fit this bill);

!sbd_ff : drift, l=3.0/2, type="h25";
  sbd_ff : drift, l=3.0/2, type="h25" ;!this is just a placeholder;

! ==============================================================================;
! quadrupolerupoles;
! ------------------------------------------------------------------------------;

! collimation / final focus;

  lq2  := 2.0;
  lqf1 := 2.0;
  lqd0 := 2.2;

  rq1    := 0.01*m;
  rq1p25 := 0.0125;
  rq2    := 0.02;
  rq3    := 0.03;

  kqb3   := -0.024980261682;
  kqb2   :=  0.982705007366e-3;
  kqb1   :=  0.022717941178;
  kqb0   := -0.021939156638;
  kqb0m  :=  kqb0;
  kqb1m  :=  kqb1;
  kqb2m  := -0.122420786593e-2;
  kqb3m  := -0.030076318908;
  kqs1   :=  0.01097678;
  kqs2   := -0.01201029;
  kqs3   :=  0.01195141;
  kqm16  := -0.932086368071e-2;
  kqm15  :=  0.499235704254e-2;
  kqm14  := -0.306167094467e-2;
  kqm13a := -0.616285306201e-2;
  kqm13b :=  0.042946171654;
  kqm12  := -0.018120377666;
  kqm11  :=  0.016996304506;
  kqd10  := -0.914613e-2;
  kqf9   :=  0.01112554;
  kqd8   := -0.01596707;
  kqf7   :=  0.02085692;
  kqd6   := -0.01596707;
  kqf5   :=  0.0109844;
  kqd4   := -0.8664e-2;
  kqd2b  := -0.20227e-2;
  kqf3   :=  0.01252071;
  kqd2a  := -0.01126068;
  kqf1   :=  0.09626012;
  kqd0   := -0.16982715;

  qb3   : ilcquad, l=lq2/2,  k1=kqb3,   aper=rq1,    type="d20";
  qb2   : ilcquad, l=lq2/2,  k1=kqb2,   aper=rq1,    type="d20";
  qb1   : ilcquad, l=lq2/2,  k1=kqb1,   aper=rq1,    type="d20";
  qb0   : ilcquad, l=lq2/2,  k1=kqb0,   aper=rq1,    type="d20";
  qb0m  : ilcquad, l=lq2/2,  k1=kqb0m,  aper=rq1,    type="d20";
  qb1m  : ilcquad, l=lq2/2,  k1=kqb1m,  aper=rq1,    type="d20";
  qb2m  : ilcquad, l=lq2/2,  k1=kqb2m,  aper=rq1,    type="d20";
  qb3m  : ilcquad, l=lq2/2,  k1=kqb3m,  aper=rq1,    type="d20";
  qs1   : ilcquad, l=lq2/2,  k1=kqs1,   aper=rq1,    type="d20";
  qs2   : ilcquad, l=lq2/2,  k1=kqs2,   aper=rq1,    type="d20";
  qs3   : ilcquad, l=lq2/2,  k1=kqs3,   aper=rq1,    type="d20";
  qm16  : ilcquad, l=lq2/2,  k1=kqm16,  aper=rq2,    type="d40";
  qm15  : ilcquad, l=lq2/2,  k1=kqm15,  aper=rq2,    type="d40";
  qm14  : ilcquad, l=lq2/2,  k1=kqm14,  aper=rq2,    type="d40";
  qm13a : ilcquad, l=lq2/2,  k1=kqm13a, aper=rq2,    type="d40";
  qm13b : ilcquad, l=lq2/2,  k1=kqm13b, aper=rq2,    type="d40";
  qm12  : ilcquad, l=lq2/2,  k1=kqm12,  aper=rq2,    type="d40";
  qm11  : ilcquad, l=lq2/2,  k1=kqm11,  aper=rq2,    type="d40";
  qd10  : ilcquad, l=lq2/2,  k1=kqd10,  aper=rq1,    type="d20";
  qf9   : ilcquad, l=lq2/2,  k1=kqf9,   aper=rq1,    type="d20";
  qd8   : ilcquad, l=lq2/2,  k1=kqd8,   aper=rq1p25, type="d25";
  qf7   : ilcquad, l=lq2/2,  k1=kqf7,   aper=rq1p25, type="d25";
  qd6   : ilcquad, l=lq2/2,  k1=kqd6,   aper=rq1p25, type="d25";
  qf5   : ilcquad, l=lq2/2,  k1=kqf5,   aper=rq1p25, type="d25";
  qd4   : ilcquad, l=lq2/2,  k1=kqd4,   aper=rq1p25, type="d25";
  qd2b  : ilcquad, l=lq2/2,  k1=kqd2b,  aper=rq3,    type="d60";
  qf3   : ilcquad, l=lq2/2,  k1=kqf3,   aper=rq3,    type="d60";
  qd2a  : ilcquad, l=lq2/2,  k1=kqd2a,  aper=rq3,    type="d60";
  qf1   : ilcquad, l=lqf1/2, k1=kqf1,   aper=rq1,    type="d20";
  qd0   : ilcquad, l=lqd0/2, k1=kqd0,   aper=rq1,    type="d20";

! ir skew quadrupole;

!sq3ff : ilcquad, l=0.3/2, k1=0, aper=rq1, tilt, type="d20";
  sq3ff : drift, l=0.3/2 ;!this is just a placeholder;

! ==============================================================================;
! sextupoles;
! ------------------------------------------------------------------------------;

  ls1  := 1.0;
  lsf1 := 0.3;
  lsd0 := 0.6;

  rs1    := 0.01;
  rs1p25 := 0.0125;

  ksf6 := bsign*(-1.69939443454 );
  ksf5 := bsign*( 0.419515957698);
  ksd4 := bsign*(-3.301438410805);
  ksf1 := bsign*( 7.252873476491);
  ksd0 := bsign*(-7.740702674458);

  sf6 : sextupole, l=ls1/2,  k2=ksf6, aper=rs1,    type="d20";
  sf5 : sextupole, l=ls1/2,  k2=ksf5, aper=rs1p25, type="d25";
  sd4 : sextupole, l=ls1/2,  k2=ksd4, aper=rs1p25, type="d25";
  sf1 : sextupole, l=lsf1/2, k2=ksf1, aper=rs1,    type="d20";
  sd0 : sextupole, l=lsd0/2, k2=ksd0, aper=rs1,    type="d20";

! ==============================================================================;
! octupoles;
! ------------------------------------------------------------------------------;

  lo3  := 3.0;
  lo2  := 2.0;
  lo1  := 1.0;
  lop3 := 0.3;
  lop1 := 0.1;

  ro1  := 0.01;
  rop7 := 0.007;

  tfoc := 0; !use this to turn the tail-folding octupoles on or off

  koc7e := -4.0753e3*tfoc;
  koc7d :=  3.3727e3*tfoc;
  koc7c := -3.8645e3*tfoc;
  koc7b :=  4.0261e3*tfoc;
  koc7a := -1.7566e3*tfoc;
  koc10 :=  5.91716;
  koc1  :=-32.54437;
  koc0  :=  3.0769222e2;

  oc7e : octupole, l=lo3/2,  k3=koc7e, aper=rop7, type="d14";
  oc7d : octupole, l=lo3/2,  k3=koc7d, aper=rop7, type="d14";
  oc7c : octupole, l=lo2/2,  k3=koc7c, aper=rop7, type="d14";
  oc7b : octupole, l=lo2/2,  k3=koc7b, aper=rop7, type="d14";
  oc7a : octupole, l=lop3/2, k3=koc7a, aper=rop7, type="d14";
  oc10 : octupole, l=lo1/2,  k3=koc10, aper=rop7, type="d14";
  oc4  : drift, l=lop1;
  oc1  : octupole, l=lop3/2, k3=koc1,  aper=ro1,  type="d20";
  oc0  : octupole, l=lop1/2, k3=koc0,  aper=ro1,  type="d20";

! ==============================================================================;
! decapoles;
! ------------------------------------------------------------------------------;

  vdec46 := -1.77514e+5;

  kdec6l := bsign*vdec46/2;
  kdec4l := bsign*vdec46/2;

  !dec6 : multipole, lrad=1.0e-4, k4l=kdec6l, type="d25";
  !dec4 : multipole, lrad=1.0e-4, k4l=kdec4l, type="d25";

  dec6:marker;
  dec4:marker;

! ==============================================================================;
! spoilers and absorbers;
! ------------------------------------------------------------------------------;
! note: spoiler and absorber apertures have not been optimized for this;
!        system (;!) ... these are old nlc values;
! ------------------------------------------------------------------------------;
! note: spoilers (sp*) and absorbers (ab*) are movable 4-jaw devices;;
!       protection collimators (pc*) are fixed circular apertures;;
!       photon masks (msk*) are fixed vertical slits;
!       sp1-5 are 0.6 radiation lengths copper;
!       spex is 1.0 radiation length titanium;
!       ab2-5 are 30.0 radiation lengths copper;
!       abe, ab7-10, and msk1-2 are 30.0 radiation lengths tungsten;
!       pc1-11 are 15.0 radiation lengths copper;
!       output per g. blair
!       crab cavity mask (mskcrab) is a fixed circular aperture
! ------------------------------------------------------------------------------;

! per l. keller for tail-folding octupole doublets off;

! I. Agapov : set new apertures,
! temporarily changed (pc*) from ecol to rcol to
! check with S. Drozhdin's STRUCT deck

  xgapsp1  :=  10*mm ; ygapsp1 := 10*mm;
  xgapab2  :=  1.7*mm ; ygapab2  :=  1.3*mm;
  xgapsp2  :=  0.98*mm ; ygapsp2 := 0.53*mm;
  rpc1     :=  5.000e-3;
  xgappc1  := 1.3*mm; ygappc1 := 0.7*mm;
  xgapab3  :=  0.7*mm; ygapab3 := 0.7*mm;
  xgapsp3  :=  10*mm ; ygapsp3  :=  10*mm;
  rpc2     :=  5.000e-3;
  xgappc2  := 1.1*mm; ygappc2 := 0.7*mm;
  rpc3     :=  5.000e-3;
  xgappc3  := 2.8*mm; ygappc3 := 1.5*mm;
  xgapab4  :=  1.9*mm ; ygapab4  :=  1.3*mm;
  xgapsp4  :=  0.98*mm ; ygapsp4  :=  0.53*mm;
  rpc4     :=  5.000e-3;
  xgappc4  := 2.8*mm; ygappc4 := 1.5*mm;
  rpc5     :=  5.000e-3;
  xgappc5  := 1.8*mm; ygappc5 := 0.7*mm;
  xgapab5  :=  1.0*mm ; ygapab5  :=  0.7*mm;
  xgapsp5  :=  10*mm ; ygapsp5  :=  10*mm;
  rpc6     :=  5.000e-3;
  xgappc6  := 1.8*mm; ygappc6 := 0.7*mm;
  rpdump   := 10.000e-3;
  xgappdump  := 1.8*mm; ygappdump := 1.5*mm;
  rpc7     :=  5.000e-3;
  xgappc7  := 60*mm; ygappc7 := 3.5*mm;
  xgapspex :=  0.5*mm; ygapspex := 0.9*mm;
  rpc8     :=  5.000e-3;
  xgappc8  := 0.7*mm; ygappc8 := 1.7*mm;
  rpc9     :=  5.000e-3;
  xgappc9  := 0.7*mm; ygappc9 := 1.2*mm;
  rpc10    :=  5.000e-3;
  xgappc10  := 1.2*mm; ygappc10 := 1.0*mm;
  xgapabe  :=  1.8*mm ; ygapabe  :=  0.5*mm;
  rpc11    :=  5.000e-3;
  xgappc11  := 0.8*mm; ygappc11 := 0.7*mm;
  xgapab10 :=  7.0*mm ; ygapab10 :=  7.0*mm;
  xgapab9  :=  10*mm ; ygapab9  :=  4.5*mm;
  xgapab7  :=  4.4*mm ; ygapab7  :=  1.6*mm;
  xgapmsk1 :=  7.8*mm; ygapmsk1 := 4.0*mm;
  xgapmsk2 :=  7.4*mm; ygapmsk2 := 4.5*mm;
  rmskcrab := 10.500*mm;

! per l. keller for tail-folding octupole doublets on;

!set, xgapsp1, 0.750e-3 ; set, ygapsp1, 0.750e-3;
!set, xgapsp2, 0.750e-3 ; set, ygapsp2, 0.750e-3;
!set, xgapsp3, 0.750e-3 ; set, ygapsp3, 0.750e-3;
!set, xgapsp4, 0.750e-3 ; set, ygapsp4, 0.750e-3;
!set, xgapsp5, 0.750e-3 ; set, ygapsp5, 0.750e-3;

  lspb  := 0.0086 ;! 0.6 r.l. cu;
  lspe  := 0.0356 ;! 1.0 r.l. ti;
  lab   := 0.4290 ;!30.0 r.l. cu;
  labff := 0.1050 ;!30.0 r.l. w;
  lpc   := 0.2145 ;!15.0 r.l. cu;
  lmsk  := 0.1050 ;!30.0 r.l. w;

  sp1   : rcol, l=lspb,  type="x0.6y0.5",  xsize=xgapsp1,  ysize=ygapsp1,material="Copper";
  ab2   : rcol, l=lab,   type="x8y8",      xsize=xgapab2,  ysize=ygapab2,material="Copper";
  sp2   : rcol, l=lspb,  type="x0.6y0.4",  xsize=xgapsp2,  ysize=ygapsp2,material="Copper";
  
  !pc1   : ecol, l=lpc,   type="x10y10",    xsize=rpc1,     ysize=rpc1,material="Copper";
  pc1   : rcol, l=lpc,   type="x10y10",    xsize=xgappc1,   ysize=ygappc1,material="Copper";
  
  ab3   : rcol, l=lab,   type="x8y8",      xsize=xgapab3,  ysize=ygapab3,material="Copper";
  sp3   : rcol, l=lspb,  type="x0.6y0.5",  xsize=xgapsp3,  ysize=ygapsp3,material="Copper";
  

  !pc2   : ecol, l=lpc,   type="x10y10",    xsize=rpc2,     ysize=rpc2,material="Copper";
  !pc3   : ecol, l=lpc,   type="x10y10",    xsize=rpc3,     ysize=rpc3,material="Copper";
  pc2   : rcol, l=lpc,   type="x10y10",    xsize=xgappc2,  ysize=ygappc2,material="Copper";
  pc3   : rcol, l=lpc,   type="x10y10",    xsize=xgappc3,  ysize=ygappc3,material="Copper";
  

  ab4   : rcol, l=lab,   type="x8y8",      xsize=xgapab4,  ysize=ygapab4,material="Copper";
  sp4   : rcol, l=lspb,  type="x0.6y0.4",  xsize=xgapsp4,  ysize=ygapsp4,material="Copper";
  
  !pc4   : ecol, l=lpc,   type="x10y10",    xsize=rpc4,     ysize=rpc4,material="Copper";
  !pc5   : ecol, l=lpc,   type="x10y10",    xsize=rpc5,     ysize=rpc5,material="Copper";
  pc4   : ecol, l=lpc,   type="x10y10",    xsize=xgappc4,  ysize=ygappc4,material="Copper";
  pc5   : ecol, l=lpc,   type="x10y10",    xsize=xgappc5,  ysize=ygappc5,material="Copper";
  
  ab5   : rcol, l=lab,   type="x8y8",      xsize=xgapab5,  ysize=ygapab5,material="Copper";
  sp5   : rcol, l=lspb,  type="x0.84y0.5", xsize=xgapsp5,  ysize=ygapsp5,material="Copper";
  
  !pc6   : ecol, l=lpc,   type="x10y10",    xsize=rpc6,     ysize=rpc6,material="Copper";
  !pdump : ecol, l=lpc,   type="x20y20",    xsize=rpdump,   ysize=rpdump,material="Copper";
  !pc7   : ecol, l=lpc,   type="x10y10",    xsize=rpc7,     ysize=rpc7,material="Copper";
  pc6   : rcol, l=lpc,   type="x10y10",    xsize=xgappc6,  ysize=ygappc6,material="Copper";
  pdump : rcol, l=lpc,   type="x20y20",    xsize=xgappdump, ysize=ygappdump,material="Copper";
  pc7   : rcol, l=lpc,   type="x10y10",    xsize=xgappc7,  ysize=ygappc7,material="Copper";

  spex  : rcol, l=lspe,  type="x6.4y0",    xsize=xgapspex, ysize=ygapspex, material="Titanium";
 

  !pc8   : ecol, l=lpc,   type="x10y10",    xsize=rpc8,     ysize=rpc8,material="Copper";
  !pc9   : ecol, l=lpc,   type="x10y10",    xsize=rpc9,     ysize=rpc9,material="Copper";
  !pc10  : ecol, l=lpc,   type="x10y10",    xsize=rpc10,    ysize=rpc10,material="Copper";
  pc8   : rcol, l=lpc,   type="x10y10",    xsize=xgappc8,   ysize=ygappc8,material="Copper";
  pc9   : rcol, l=lpc,   type="x10y10",    xsize=xgappc9,   ysize=ygappc9,material="Copper";
  pc10  : rcol, l=lpc,   type="x10y10",    xsize=xgappc10,  ysize=ygappc10,material="Copper";

  abe   : rcol, l=labff, type="x2y2",      xsize=xgapabe,  ysize=ygapabe,material="Tungsten";
  

  !pc11  : ecol, l=lpc,   type="x10y10",    xsize=xgappc11,    ysize=ygappc11,material="Copper";
  pc11  : rcol, l=lpc,   type="x10y10",    xsize=xgappc11,    ysize=ygappc11,material="Copper";

  ab10  : rcol, l=labff, type="x8.8y8.8",  xsize=xgapab10, ysize=ygapab10,material="Tungsten";
  ab9   : rcol, l=labff, type="x13.2y6",   xsize=xgapab9,  ysize=ygapab9,material="Tungsten";
  ab7   : rcol, l=labff, type="x9y6",      xsize=xgapab7,  ysize=ygapab7,material="Tungsten";
  msk1  : rcol, l=lmsk,  type="x16.6y0",   xsize=xgapmsk1, ysize=ygapmsk1, material="Tungsten";
  msk2  : rcol, l=lmsk,  type="x17y0",     xsize=xgapmsk2, ysize=ygapmsk2, material="Tungsten";
  mskcrab : ecol, l=lmsk,  type="x10.5y10.5", xsize=rmskcrab, ysize=rmskcrab, material="Tungsten";

! ==============================================================================;
! driftts;
! ------------------------------------------------------------------------------;

! collimation / final focus;

  ldbm  :=  2.1481;
  ldb0  :=  2.1481;
  dldb0 := 25.752235097059;
  ldb1  := 79.8744;
  ldb2  :=  4.3039;
  ldbmm :=  2.1481;
  ldb1m := 35.25883770713;
  ldb0m := 42.220804966667;

  dbm  : drift, l= ldbm;
  db0  : drift, l= ldb0+dldb0;
  db1  : drift, l= ldb1-dldb0;
  db2  : drift, l= ldb2;
  dbmm : drift, l= ldbmm;
  db1m : drift, l= ldb1m;
  db0m : drift, l= ldb0m;
  lx0  : drift, l= 0.3;
  ds3  : drift, l=12.0;
  dsm  : drift, l= 1.0;
  d12  : drift, l=10.797027991439;
  d11  : drift, l=12.0;
  d10  : drift, l=12.0;
  d9   : drift, l=12.0;
  d8   : drift, l=12.0;
  d7e  : drift, l=10.7;
  d7d  : drift, l= 4.0;
  d7c  : drift, l=37.0;
  d7b  : drift, l= 3.0;
  d7a  : drift, l=37.0;
  d7   : drift, l=12.0;
  d710 : drift, l= 3.0;
  d6a  : drift, l= 0.86777;
  d6   : drift, l= 9.23999;
  d5b  : drift, l= 6.89534-4*sbd_ff[l]-2*lx0[l];
  d5a  : drift, l= 6.89534;
  d4   : drift, l= 9.23999;
  d4a  : drift, l= 0.86777;
  d3   : drift, l=20.01176;
  d3b  : drift, l=28.6;
  d2   : drift, l=77.08464;
  d1c  : drift, l= 0.15;
  d1b  : drift, l= 1.35;
  d1a  : drift, l= 0.05;
  d0   : drift, l= 3.51;

  ld12a := 2.947756324585;
  dld12 := 0;

  dbma  : drift, l=dbm[l]-lspb;
  dbmb  : drift, l=dbm[l]-(lab+lspb);
  db0a  : drift, l=db0[l]-0.5;
  db0b  : drift, l=0.5-lpc;
  db1a  : drift, l=db1[l]/2;
  db1b  : drift, l=db1[l]-db1a[l];
  db1d  : drift, l=0.5-lpc;
  db1c  : drift, l=db1[l]-(db1a[l]+lpc+db1d[l]);
  db2a  : drift, l=db2[l]-0.5;
  db2b  : drift, l=0.5-lpc;
  dbmma : drift, l=dbmm[l]-(lab+lspb);
  db1ma : drift, l=db1m[l]-0.5;
  db1mb : drift, l=0.5-lpc;
  db0mb : drift, l=3.0-(lab+lspb);
  db0ma : drift, l=db0m[l]-3.0;
  lx0a  : drift, l=lx0[l]-lpc;
  dsma  : drift, l=dsm[l]-lspe;
  ds3a  : drift, l=ds3[l]-0.5;
  ds3b  : drift, l=0.5-lpc;
  lx0b  : drift, l=lx0[l]-labff;
  d710a : drift, l=d710[l]-labff;
  d3c   : drift, l=24.89536;
  d2b   : drift, l=34.825-lmsk;
  d2a   : drift, l=40.295;
  d12a  : drift, l=ld12a+dld12;
  d12b  : drift, l=(d12[l]-ld12a)-dld12;
  dmsq  : drift, l=1.45464;
  musp1 : drift, l=9.0, type="muon spoiler";
  d7ea  : drift, l=(d7e[l]-musp1[l])/2;
  musp2 : drift, l=18.0, type="muon spoiler";
  d3a   : drift, l=5.7164;

! energy spectrometer matching;

  dspect : drift, l=0.5;
  decbpm : drift, l=1.4;
  lx0h   : drift, l=lx0[l]/2;

! ==============================================================================;
! markers;
! ------------------------------------------------------------------------------;

  begeff1 : marker;
  bcol1   : marker;
  bcol2   : marker;
  mdw     : marker;
  espect  : marker;
  ip      : marker;
  endeff1 : marker;

! for r-matrix fitting;

  mr1i : marker;
  mr1f : marker;
  mr2i : marker;
  mr2f : marker;

! ==============================================================================;
! diagnostic/correction devices, etc.;
! ------------------------------------------------------------------------------;

  phasemon : marker ;!beam arrival phase markertor;
  ws_div   : marker ;!divergence marker scanner;
  ws_esp   : marker ;!energy spread marker scanner;

! insertable beam stoppers;

  st1 : marker ;!pps;
  st2 : marker ;!pps;
  st3 : marker ;!pps;
  st4 : marker ;!tune-up (1 bunch @ 750 gev, 10 hz = 20 kw);

! crab cavity (s-band, 2pi/3 device based on slac lola-iii models);

  crab_cav : drift, l=3.8;

! steering magnets;

  xcorfb : marker;
  ycorfb : marker;

! correctors for ip collision control;

  xcorip : marker;
  ycorip : marker;

! virtual ip diagnostics (for simulations only);

  qdmy_ip : ilcquad, l=1.e-06, k1=0, aper=1, type="virtual";
  bpm_ip  : marker; !for deflection markertoring simulations;
  ws_ip   : marker ;!ip beam size via lumi or deflection scans;
  ip_pkg  : line=(qdmy_ip,bpm_ip,qdmy_ip,ws_ip);

! energy spectrometer bpms;

  ecbpm1 : marker;
  ecbpm2 : marker;
  ecbpm3 : marker;

  endeffu : marker;

  startfd : marker;

! IP angle feedback devices

  fbangkik : marker;
  fbangbpm : marker;

! ==============================================================================;
! beamlines;
! ------------------------------------------------------------------------------;

  qf1pkg : line=(qf1,bpmq079,qf1);
  qd0pkg : line=(qd0,bpmq079,qd0);

  effu : line=(begeff1,
               bpmmb079,xcorfb,ycorfb,mr1i,sp1,dbma,
               qb3,bpmq079,qb3,db0,
               qb2,bpmq079,qb2,db1a,st1,db1b,
               qb1,bpmq079,qb1,db2,
               qb0,bpmq079,qb0,dbm,bcol1,bpmmb079,xcorfb,ycorfb,ab2,sp2,dbmb,
               qb0,bpmq079,qb0,db2,
               qb1,bpmq079,qb1,db1a,st2,db1c,pc1,db1d,
               qb2,bpmq079,qb2,db0,
               qb3,bpmq079,qb3,dbmm,mr1f,bpmmb079,xcorfb,ycorfb,ab3,sp3,dbmma,
               qb3,bpmq079,qb3,db0a,pc2,db0b,
               qb2,bpmq079,qb2,db1a,st3,db1c,pc3,db1d,
               qb1,bpmq079,qb1,db2,
               qb0,bpmq079,qb0,dbm,bcol2,bpmmb079,xcorfb,ycorfb,ab4,sp4,dbmb,
               qb0m,bpmq079,qb0m,db2a,pc4,db2b,
               qb1m,bpmq079,qb1m,db1ma,pc5,db1mb,
               qb2m,bpmq079,qb2m,db0ma,bpmmb079,ab5,sp5,db0mb,
               qb3m,bpmq079,qb3m,lx0,
               bs1,bs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,pc6,lx0a,
               qs1,bpmq079,qs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,pdump,lx0a,bpme,
               bs1,bs1,lx0,
               bs1,bs1,lx0,bpme,
               bs1,bs1,lx0,
               bs1,bs1,lx0,bpme,
               bs1,bs1,lx0,
               bs1,bs1,lx0,bpme,ws_esp,
               bs1,bs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,pc7,lx0a,
               qs2,bpmq079,qs2,ds3,
               qs3,bpmq079,qs3,dsm,spex,dsma,
               qs3,bpmq079,qs3,ds3a,pc8,ds3b,
               qs2,bpmq079,qs2,lx0,
               bs1,bs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,pc9,lx0a,
               bs1,bs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,pc10,lx0a,
               bs1,bs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,abe,lx0b,
               qs1,bpmq079,qs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,lx0,
               bs1,bs1,pc11,lx0a,endeffu);

  effs : line=(mdw,dspect,
               ecbpm1,decbpm,bec1a,bec1b,decbbo,bec2a,bec2b,decbbi,ecbpm2,
               espect,decbbi,bec3a,bec3b,decbbo,bec4a,bec4b,decbpm,ecbpm3,
               dspect,mdw);

  effm : line=(qm16,bpmq079,qm16,d12a,fbangkik,d12b,
               qm15,bpmq079,qm15,d11,
               qm14,bpmq079,qm14,d10,
               qm13a,bpmq079,qm13a,lx0h,effs,lx0h,
               qm13b,bpmq079,qm13b,d9,
               qm12,bpmq079,qm12,d8,
               qm11,bpmq079,qm11);

  effd : line=(d7ea,musp1,d7ea,
               oc7e,bpmvirt,oc7e,d7d,
               oc7d,bpmvirt,oc7d,d7c,
               oc7c,bpmvirt,oc7c,d7b,
               oc7b,bpmvirt,oc7b,d7a,
               oc7a,bpmvirt,oc7a,d7,ab10,d710a,
               qd10,bpmq079,qd10,lx0,
               oc10,bpmvirt,oc10,lx0,ws_div,
               qd10,bpmq079,qd10,d6a,dec6,bpmvirt,dec6,fbangbpm,d6,
               qf9,bpmq079,qf9,ab9,lx0b,
               sf6,mr2i,bpmvirt,sf6,bpmmb079,lx0,
               qf9,bpmq079,qf9,d5b,2*sbd_ff,lx0,2*sbd_ff,lx0,
               b5,b5,lx0,
               b5,b5,lx0,
               b5,b5,lx0,
               qd8,bpmq079,qd8,lx0,
               b5,b5,lx0,
               b5,b5,ab7,lx0b,
               qf7,bpmq079,qf7,xcorfb,ycorfb,lx0,
               b5,b5,lx0,
               b5,b5,lx0,
               qd6,bpmq079,qd6,lx0,
               b5,b5,lx0,
               b5,b5,lx0,
               b5,b5,d5a,
               qf5,bpmq079,qf5,lx0,
               sf5,mr2f,bpmvirt,sf5,bpmmb079,lx0,
               qf5,bpmq079,qf5,d4,dec4,bpmvirt,dec4,d4a,
               qd4,bpmq079,qd4,lx0,
               sd4,bpmvirt,sd4,bpmmb079,lx0,
               qd4,bpmq079,qd4,oc4,d3a,musp2,d3c,lx0,
               b2,b2,lx0,
               b2,b2,lx0,
               b2,b2,lx0,
               b2,b2,lx0,
               b2,b2,lx0,xcorfb,
               b2,b2,lx0,
               b2,b2,lx0,
               qd2b,bpmq079,qd2b,lx0,ycorfb,
               b2,b2,lx0,
               b2,b2,lx0,
               qf3,bpmq079,qf3,lx0,
               b2,b2,lx0,
               b2,b2,lx0,
               qd2a,bpmq079,qd2a,lx0,
               b1,b1,lx0,
               b1,b1,lx0,
               b1,b1,lx0,
               b1,b1,lx0,
               b1,b1,lx0,
               b1,b1,d2a,msk1,d2b,mskcrab,crab_cav,lx0,st4,lx0,msk2,dmsq,
               sq3ff,sq3ff,lx0,phasemon,
               oc1,bpmvirt,oc1,lx0,bpmmb079,
               sf1,bpmvirt,sf1,d1c,
               startfd, qf1pkg,d1b,
               sd0,bpmvirt,sd0,bpmmb079,oc0,bpmvirt,oc0,d1a,
               qd0pkg,xcorip,ycorip,d0,ip,endeff1);

  eff1  : line=(effu,effm,effd);

  !eff1 : line=(effu);

  !eff1s : line=(eff1,ip_pkg);

! ==============================================================================;

