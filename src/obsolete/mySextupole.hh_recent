
#ifndef mySextupole_h
#define mySextupole_h 1

#include "globals.hh"
#include "myAcceleratorComponent.hh"
#include "myGlobals.hh"
#include "myMultipoleField.hh"
#include "G4MagneticField.hh"
#include "myMaterials.hh"
#include "mySextStepper.hh"
#include "G4FieldManager.hh"
#include "G4ChordFinder.hh"
#include "G4UniformMagField.hh"
#include "G4VisAttributes.hh"
#include "G4Mag_UsualEqRhs.hh"
#include "G4Tubs.hh"

class mySextupole :public myAcceleratorComponent
{

  public:
      //	Constructor taking the id of the dipole, the length
      //	(meter) and curvature (1/meter) of the dipole geometry,
      //	and the vertical magnetic field in Tesla.
      mySextupole (G4String& id, G4double len, G4double bpRad,G4double bGrad);

      ~mySextupole();

     G4VisAttributes* SetVisAttributes();

  protected:
  //  void BuildSextupoleMaterial();
 
  private:

  G4LogicalVolume* SextLogicalVolume(G4String aName,G4double aLength);


  // Geometrical objects:
G4Box* itsBox;

  // field related objects:
  mySextStepper* itsStepper;
  G4FieldManager* itsBPFieldMgr;
  G4FieldManager* itsOuterFieldMgr;
  G4UniformMagField* itsMagField;
  G4ChordFinder* itsChordFinder;
  G4Mag_UsualEqRhs* itsEqRhs;

  G4VisAttributes* itsVisAttributes;
};


#endif
